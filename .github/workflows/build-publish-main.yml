name: CentOps Api Build and Publish Pipeline

on:
  push:
    branches: [ main ]

jobs:
  PackageDeploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Setup BuildX
      uses: docker/setup-buildx-action@v2

    - name: Set image tag
      run: |
        LOWER_CASE_GITHUB_REPOSITORY=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')
        echo "DOCKER_TAG_SHA=ghcr.io/${LOWER_CASE_GITHUB_REPOSITORY}:${GITHUB_SHA}" >> $GITHUB_ENV
    
    - name: Docker Build
      run: docker image build -f src/CentOps.Api/Dockerfile --tag $DOCKER_TAG_SHA ./src
    
    - name: Install cosign
      uses: sigstore/cosign-installer@7cc35d7fdbe70d4278a0c96779081e6fac665f88

    - name: Log in to GitHub container registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Push Docker image to ghcr
      run: docker push $DOCKER_TAG_SHA

    - name: Sign Docker image
      run: |
        cosign sign \
          -a "ref=${{ github.sha }}" \
          --upload=true \
          $DOCKER_TAG_SHA
      env:
        COSIGN_EXPERIMENTAL: "true"

  app_deployment:
    env:
      cd_workflow_dispatch_file_name: cd-app-deployment.yml
      infrastructure_repo_path: buerokratt/Infrastructure
      app_name: centops
    runs-on:
      ubuntu-22.04
    defaults:
      run:
        shell : bash
    needs :
      PackageDeploy
    steps:
      - name: Initiate k8s app deployment
        run: |
          gh workflow run $cd_workflow_dispatch_file_name -f app_name=$app_name -f image_tag=${GITHUB_SHA} --repo $infrastructure_repo_path --ref main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_MULTI_REPO_WORKFLOW_ACCESS }}
